name: CICD workflow

on:
  push:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.14.0

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

  build:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Check types
        run: npm run typescript

      - name: Build files
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Heroku Container Registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: "jackblakeston93@gmail.com"

      - name: Build and push Docker image
        run: |
          docker build -t registry.heroku.com/adoptemos-server/web .
          docker push registry.heroku.com/adoptemos-server/web

      - name: Deploy to Heroku
        run: |
          HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }}  heroku container:release web -a adoptemos-server
